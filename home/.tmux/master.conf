#########################
#          Keys         #
#########################

# Make C-a primary prefix
set -g prefix C-a

# Pane navigation
# smart pane switching with awareness of vim splits
# https://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
unbind-key -n C-up
unbind-key -n C-down
unbind-key -n C-left
unbind-key -n C-right
bind-key -n C-up     run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind-key -n C-down   run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind-key -n C-left   run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind-key -n C-right  run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Window switching
unbind-key -n F1 ;   bind-key -n F1   select-window -t :1
unbind-key -n F2 ;   bind-key -n F2   select-window -t :2
unbind-key -n F3 ;   bind-key -n F3   select-window -t :3
unbind-key -n F4 ;   bind-key -n F4   select-window -t :4
unbind-key -n F5 ;   bind-key -n F5   select-window -t :5
unbind-key -n F6 ;   bind-key -n F6   select-window -t :6
unbind-key -n F7 ;   bind-key -n F7   select-window -t :7
unbind-key -n F8 ;   bind-key -n F8   select-window -t :8
unbind-key -n F9 ;   bind-key -n F9   select-window -t :9
unbind-key -n F10;  bind-key -n F10  select-window -t :10

# Close windows with C-w, browser style.
bind-key -n C-w kill-pane

# Enter selection mode (broke in new tmux)
#bind-key -t vi-copy 'v' begin-selection

# Enter copy when in selection mode vim style (broke in new tmux)
#bind-key -t vi-copy 'y' copy-selection

# Reload master-conf
bind-key r source-file ~/.tmux/master.conf

# Hide/show status bar
bind-key b set status

# For same keys on both swedish and english keyboard layout
bind-key '@' split-window -v -c '#{pane_current_path}'
bind-key '"' split-window -v -c '#{pane_current_path}'
bind-key '%' split-window -h -c '#{pane_current_path}'

# Enable sending commands to a nested tmux session
bind-key C-a send-prefix

# Vim keys for copy and paste
setw -g mode-keys vi
unbind [
unbind p
bind C-y copy-mode
bind p paste-buffer

# Broke in new tmux
#bind -t vi-copy v begin-selection
#bind -t vi-copy y copy-selection
#bind -t vi-copy Escape cancel

########################
#       Settings       #
########################
#set-option quiet on

# Set system shell
set-option -g default-shell $SHELL

# Bad practice, but worked in the past and recommended by neovim's :checkhealth
#set-option -g default-terminal tmux-256color

# Enable truecolor support (tmux >=2.2)
# https://github.com/tmux/tmux/issues/34#issuecomment-261017036
set-option -ga terminal-overrides ",*256col*:Tc"

# Start window indexes at 1
set -g base-index 1

# Enable mouse
set-option -g mouse on

# Renumber windows when one is deleted
set-option -g renumber-windows on

# "Aggressive resize" makes windows resize only when
# currently viewing in >=2 conflicting sessions
set -g aggressive-resize on

# Enable mouse scrolling in vim etc.
set -ga terminal-overrides ',xterm*:smcup@:rmcup@'

# View display-messages for longer
set-option -g display-time 2500

# Set window names manually
set-option -g allow-rename off

# Set bells
set -g monitor-bell on
set -g visual-bell on
set -g bell-action other

# Basic theme (deprecated options)
#set-option -g message-fg white
#set-option -g message-bg blue
#set-option -g message-attr bold
#set-option -g pane-border-fg white
#set-option -g pane-active-border-fg blue
#set -g pane-border-bg colour235
#set -g pane-border-fg colour238
#set -g pane-active-border-bg colour236
#set -g pane-active-border-fg colour34

#set-option -q quiet off

# Set proper terminal window title
set -g set-titles on
set -g set-titles-string "[#S:#W] #T (#{pane_current_path})"

# Use Tmux Plugin Manager (TPM)
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-continuum'

run '~/.tmux/plugins/tpm/tpm'

# Use powerline if available
if-shell \
    'which powerline' \
    "source ~/.tmux/powerline.conf" \
    ""

set -g @continuum-boot 'on'

# tmux-continuum
run-shell ~/.tmux/plugins/tmux-continuum/continuum.tmux

# Trying to get proper powerline to work, but I failed
#if-shell \
#    'which powerline' \
#    'run-shell "powerline-daemon -q"' \
#    ""
#if-shell \
#    'which powerline' \
#    'run-shell "source $(pip show powerline-status | sed -n \'/Location: /s/Location: //p\')/powerline/bindings/tmux/powerline.conf"' \
#    "true"
